kind: PersistentVolume #Piece of storage in the cluster
apiVersion: v1
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi #Size of the storage
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data" #Path on the host nod's filesystem
---
kind: PersistentVolumeClaim #Request for storage in the cluster
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment #A Deployment manages a set of Pods
metadata:
  name: postgres
spec:
  replicas: 1 #Number of replicas
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres #Name of the container
          image: postgres #Image of the container
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432 #Port to expose
          envFrom:
            - secretRef:
                name: postgres-secrets #Load env variables from secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data #Path to mount the volume after request
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim: #Request for storage in the cluster using the claim
            claimName: postgres-pv-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
    spec:
      containers:
        - name: test-app
          image: test-app-image
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: postgres-secrets